(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6266],{83621:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/styles/unstyled",function(){return t(52288)}])},52288:function(e,n,t){"use strict";t.r(n);var s=t(85893),a=t(11151),l=t(34940),o=t(25263),r=t(60045);let c=(0,l.A)(o.us.UnstyledComponents);function i(e){let n=Object.assign({h1:"h1",h2:"h2",p:"p",code:"code",a:"a",blockquote:"blockquote",strong:"strong"},(0,a.ah)(),e.components),{Demo:t}=n;return t||function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Demo",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"unstyled-components",children:"Unstyled components"}),"\n",(0,s.jsx)(n.h2,{id:"using-mantine-as-a-headless-ui-library",children:"Using Mantine as a headless UI library"}),"\n",(0,s.jsxs)(n.p,{children:["You can use Mantine as a headless UI library. To do that simply do not import ",(0,s.jsx)(n.code,{children:"@mantine/*/styles.css"}),"\nin your application. Then you will be able to apply styles to Mantine components using ",(0,s.jsx)(n.a,{href:"/styles/styles-api/",children:"Styles API"}),"\nwith a styling solution of your choice."]}),"\n",(0,s.jsx)(n.h2,{id:"unstyled-prop",children:"unstyled prop"}),"\n",(0,s.jsxs)(n.p,{children:["All Mantine components support ",(0,s.jsx)(n.code,{children:"unstyled"})," prop that removes library styles from component and allows you to style it\nfrom scratch."]}),"\n",(0,s.jsxs)(n.p,{children:["Unstyled ",(0,s.jsx)(n.a,{href:"/core/tabs",children:"Tabs"})," component:"]}),"\n",(0,s.jsx)(t,{data:r.W}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Choosing between unstyled prop and headless components"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"unstyled"})," prop is useful when you want to remove library styles from a single component,\nbut keep styles for other components. For example, if ",(0,s.jsx)(n.a,{href:"/core/tabs",children:"Tabs"})," component does\nnot meet your design system requirements, but all other components do, you can use ",(0,s.jsx)(n.code,{children:"unstyled"}),"\nprop to remove styles from Tabs and style it from scratch, while keeping all other components\nstyled with Mantine styles."]}),"\n",(0,s.jsxs)(n.p,{children:["Note that ",(0,s.jsx)(n.code,{children:"unstyled"})," prop does not remove Mantine library styles from your ",(0,s.jsx)(n.code,{children:".css"})," bundle â€“\nit only does not apply them to component with ",(0,s.jsx)(n.code,{children:"unstyled"})," prop."]}),"\n"]})]})}n.default=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,s.jsx)(c,Object.assign({},e,{children:(0,s.jsx)(i,e)}))}},60045:function(e,n,t){"use strict";t.d(n,{W:function(){return o}});var s=t(67294),a=t(11211);let l=`
import { Tabs } from '@mantine/core';

function Demo() {
  return (
    <Tabs defaultValue="chat" unstyled>
      <Tabs.List>
        <Tabs.Tab value="chat">Chat</Tabs.Tab>
        <Tabs.Tab value="gallery">Gallery</Tabs.Tab>
        <Tabs.Tab value="account">Account</Tabs.Tab>
      </Tabs.List>

      <Tabs.Panel value="chat">Chat panel</Tabs.Panel>
      <Tabs.Panel value="gallery">Gallery panel</Tabs.Panel>
      <Tabs.Panel value="account">Account panel</Tabs.Panel>
    </Tabs>
  );
}
`,o={type:"code",component:function(){return s.createElement(a.m,{defaultValue:"chat",unstyled:!0},s.createElement(a.m.List,null,s.createElement(a.m.Tab,{value:"chat"},"Chat"),s.createElement(a.m.Tab,{value:"gallery"},"Gallery"),s.createElement(a.m.Tab,{value:"account"},"Account")),s.createElement(a.m.Panel,{value:"chat"},"Chat panel"),s.createElement(a.m.Panel,{value:"gallery"},"Gallery panel"),s.createElement(a.m.Panel,{value:"account"},"Account panel"))},code:l}}},function(e){e.O(0,[5664,9341,4940,9774,2888,179],function(){return e(e.s=83621)}),_N_E=e.O()}]);